plugins {
    id 'java'
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.spongepowered.mixin' version '0.7.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

version = "${mcversion}-v${modversion}"

base {
    archivesName = modid
    targetCompatibility = JavaVersion.VERSION_17
    sourceCompatibility = JavaVersion.VERSION_17
}

minecraft {
    mappings channel: "${mappingsch}", version: "${mcversion}"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    copyIdeResources = true
    runs {
        configureEach {
            workingDirectory file('run')
            arg "-mixin.config=${modid}.${mixin_file_suffix}"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'terminal.jline', 'true'
            mods {
                "${modid}" {
                    source sourceSets.main
                }
            }
        }

        client {
            taskName "runClient"
        }
    }
}

repositories {
    mavenCentral()
    maven { url "https://repo.spongepowered.org/maven" }
    maven { url "https://maven.fabricmc.net/" }
    maven { url "https://maven.tterrag.com/" }
    maven { url "https://maven.blamejared.com" }
    maven {
        url 'https://www.cursemaven.com'
        content {
            includeGroup 'curse.maven'
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mcversion}-${fgversion}"

    // MIXINS
    annotationProcessor "net.fabricmc:sponge-mixin:0.12.5+mixin.0.8.5"
    compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:0.3.5"))
    implementation(jarJar("io.github.llamalad7:mixinextras-forge:0.3.5")) {
        jarJar.ranged(it, "[0.3.5,)")
    }

    // ZUME (sound like a juice brand)
    implementation(jarJar(fg.deobf("curse.maven:zume-927564:${zumeversion}"))) {
        jarJar.ranged(it, "[0.13.2,)")
    }

    // DEPENDENCIES
    implementation fg.deobf("org.embeddedt:embeddium-1.18.2:${embeddiumversion}")
    implementation fg.deobf("curse.maven:jei-238222:${jeiversion}")
    runtimeOnly fg.deobf("curse.maven:textrues-embeddium-options-910506:${embeddiumoptionsversion}")
    runtimeOnly fg.deobf("curse.maven:oculus-581495:${oculusversion}")

    // MOD SUPPORT
    implementation fg.deobf("com.simibubi.create:create-1.18.2:${createversion}:slim") { transitive = false }
    implementation fg.deobf("com.jozufozu.flywheel:flywheel-forge-1.18.2:${flywheelversion}")
    implementation fg.deobf("com.tterrag.registrate:Registrate:${registrateversion}")

    // UTILITY
    runtimeOnly fg.deobf("curse.maven:worldedit-225608:${worldeditversion}")
}

mixin {
    add sourceSets.main, "${modid}.${mixin_refmap_suffix}"
    config("${modid}.${mixin_file_suffix}")
}

jar {
    archiveClassifier = 'ignore'
    manifest {
        attributes([
                "Specification-Title": modid,
                "Specification-Vendor": modauthor,
                "Specification-Version": modversion,
                "Implementation-Title": modname,
                "Implementation-Version": modversion,
                "Implementation-Vendor" : modauthor,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": [
                        "${modid}.${mixin_file_suffix}",
                        "com.llamalad7.mixinextras.init.mixins"
                ]
        ])
    }
}

jarJar.enable()

tasks.jarJar.finalizedBy('reobfJarJar')
tasks.jarJar.archiveClassifier = ''

// Process target resources with mod info
tasks.processResources.outputs.upToDateWhen { false }
processResources {
    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand(rootProject.properties)
    }
}

jar.finalizedBy('reobfJar')
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = 'UTF-8'
}